<Window x:Class="CoffeeSh0p.ItemWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CoffeeSh0p"
        mc:Ignorable="d"
        Height="646" Width="825"
        FontFamily ="/Fonts/#Fira Sans"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True" WindowStartupLocation="CenterScreen">
    <Window.Resources>


        <Style x:Key="BackButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="#1e1c2a" BorderThickness="0">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="330" Color="Gray" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                            <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="Black" TextBlock.FontSize="20"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#E0F2F1"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="Gray"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#15141e"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="Black"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#050507"></Setter>
                                <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#383743"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#383743"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#383743"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="50" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" Background="#383743" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#383743"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#383743"/>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" Background="#1e1c2a" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6.933,-1,6.933,9" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="15" Content="____"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" Background="#1e1c2a" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,-2,4,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="24" Content="+" Width="14"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border Background="#272537" CornerRadius="20">
        <StackPanel Margin="10,0,0,0">
            <Grid Margin="0,30,0,0">
                <Button x:Name="BtnBack" Width="150" Margin="30,10,0,40" Height="38" HorizontalAlignment="Left" Background="#1e1c2a" BorderThickness="0" Click="BtnBack_Click">

                    <StackPanel Orientation="Horizontal" Width="129">
                        <Image Source="/Images/back.png" Height="25" Width="25" Margin="0,0,0,0"/>
                        <TextBlock Text="Вернуться" 
                                   Foreground="White"
                                   FontSize="18"
                                   Margin="15,0,0,0" VerticalAlignment="Center" Height="22"/>
                    </StackPanel>
                </Button>
                <TextBlock Text="Напитки"
                   Foreground="White"
                   FontSize="25"
                   HorizontalAlignment="Center"
                   Margin="0,35,0,20" x:Name="vol"/>

                <TextBlock Text="Напитки"
                   Foreground="White"
                   FontSize="28"
                   HorizontalAlignment="Center"
                   Margin="0,0,0,0" Name="drink"/>
            </Grid>
            <Image Margin="0,0,0,0" Height="253" Width="486" Name="picture"/>
            <ToggleButton Name="ToggleSugar" Height="50" Width="250" HorizontalAlignment="Left" Margin="50,15,0,0" Content="Сахар" Foreground="White" FontSize="23">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <Border Height="35" Width="35" CornerRadius="4" HorizontalAlignment="Left"
                                    BorderThickness="1" Background="#1e1c2a">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF333842"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#FF51555C"/>
                                            </Trigger>
                                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF333842"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF51555C"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Image Margin="4">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource
                                            AncestorType={x:Type ToggleButton}}}" Value="true">
                                                    <Setter Property="Image.Source" Value="Images/check(2).png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="20,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <ToggleButton Name="ToggleCinnamon" Height="50" Width="250" HorizontalAlignment="Left" Margin="50,0,0,0" Content="Корица" Foreground="White" FontSize="23">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <Border Height="35" Width="35" CornerRadius="4" HorizontalAlignment="Left"
                                    BorderThickness="1" Background="#1e1c2a">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF333842"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#FF51555C"/>
                                            </Trigger>
                                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF333842"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF51555C"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Image Margin="4">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource
                                            AncestorType={x:Type ToggleButton}}}" Value="true">
                                                    <Setter Property="Image.Source" Value="Images/check(2).png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="20,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <ToggleButton Name="ToggleSirop" Height="50" Width="250" HorizontalAlignment="Left" Margin="50,0,0,0" Content="Сироп +15₽" Foreground="White" FontSize="23" Click="ToggleSirop_Click">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <Border Height="35" Width="35" CornerRadius="4" HorizontalAlignment="Left"
                                    BorderThickness="1" Background="#1e1c2a">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF333842"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#FF51555C"/>
                                            </Trigger>
                                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF333842"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF51555C"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Image Margin="4">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource
                                            AncestorType={x:Type ToggleButton}}}" Value="true">
                                                    <Setter Property="Image.Source" Value="Images/check(2).png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="20,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <StackPanel Orientation="Horizontal">
                <Button x:Name="BtnAdd" Height="50" Width="208"  Margin="30,25,20,0" Click="BtnAdd_Click" Background="#c4c1d6" BorderThickness="0">
                    <StackPanel Orientation="Horizontal" Width="160">
                        <Image Source="/Images/add-to-cart.png" Height="36" Width="36" Margin="0,0,0,0" HorizontalAlignment="Left"/>
                        <TextBlock Text="Добавить" 
                                   Foreground="Black"
                                   FontSize="18"
                                   Margin="15,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </StackPanel>

                </Button>
                <Grid>
                    <Rectangle Fill="#1e1c2a" HorizontalAlignment="Center" Height="54" Margin="0,27,0,0" VerticalAlignment="Top" Width="155" RadiusY="27" RadiusX="27"/>
                    <Button Name="btn_Num" Content="1" HorizontalAlignment="Center" Height="45" Margin="0,32,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource ButtonStyle1}" Foreground="#FFF7F7F7" FontSize="20" Padding="0,2,0,0"/>
                    <Button Name="btn_MinNum" Content="___" HorizontalAlignment="Left" Height="36" Margin="10,36,0,0" VerticalAlignment="Top" Width="36" Style="{DynamicResource ButtonStyle2}" Foreground="White" FontSize="11" FontWeight="Bold" FontFamily="Segoe UI Black" Click="Btn_MinNum_Click"/>
                    <Button Name="btn_PlusNum" Content="+" HorizontalAlignment="Left" Height="36" Margin="108,36,0,0" VerticalAlignment="Top" Width="36" Style="{DynamicResource ButtonStyle3}" Foreground="White" FontSize="18" FontFamily="Segoe UI" Click="Btn_PlusNum_Click"/>
                </Grid>
                <StackPanel Orientation="Vertical">
                    <Label Name="Sub" Content="Сумма" HorizontalContentAlignment="Center" Width="192" Height="37" Foreground="White" Background="Transparent" Margin="200,20,0,0" FontSize="23" BorderThickness="0"/>
                    <Label Name="Amount" Content="0" HorizontalContentAlignment="Center" Width="192" Height="35" Foreground="White" Background="Transparent" Margin="200,-15,0,0" FontSize="23" BorderThickness="0"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Border>
</Window>
